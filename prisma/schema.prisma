generator client {
  provider = "prisma-client-js"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

<<<<<<< Updated upstream

model User {
  user_id      String      @id @default(uuid())
  username   String @unique
  password String
  fullname    String
  records   Record[]
  created_at DateTime @default(now())
  deleted_at DateTime?
  is_admin Boolean @default(false)

  @@map("users")
}

model Record {
  record_id        String      @id @default(uuid())
  title     String
  content   String
  created_at DateTime @default(now())
  deleted_at DateTime?
  owner    User     @relation(fields: [owner_id], references: [user_id], onDelete: Cascade)
  owner_id  String

  @@map("records")
}

=======
model groups {
  group_id   String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  group_name String
  created_at DateTime   @default(now()) @db.Date
  deleted_at DateTime?  @db.Date
  deleted_by String?    @db.Uuid
  projects   projects[]
  users      users[]
}

model projects {
  project_id String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String
  content    String
  created_at DateTime  @default(now()) @db.Date
  deleted_at DateTime? @db.Date
  deleted_by String?   @db.Uuid
  updated_at DateTime? @db.Date
  user_id    String    @db.Uuid
  info       Json?
  group_id   String    @db.Uuid
  groups     groups    @relation(fields: [group_id], references: [group_id], onDelete: Cascade)
  users      users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model users {
  user_id    String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email      String     @unique
  password   String
  fullname   String
  created_at DateTime   @default(now()) @db.Date
  deleted_by String?    @db.Uuid
  deleted_at DateTime?  @db.Date
  group_id   String     @db.Uuid
  groups     groups     @relation(fields: [group_id], references: [group_id], onDelete: Cascade)
  projects   projects[]
}
>>>>>>> Stashed changes
